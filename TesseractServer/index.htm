<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Tesseract</title>
    <script src='https://unpkg.com/tesseract.js@v2.0.0-alpha.10/dist/tesseract.min.js'></script>
    <script>
        const {ipcRenderer} = require('electron');
        msg = (message = "",...params) => ipcRenderer.send("MessageLayer",message + Array.from(params).join(""));
        ipcRenderer.on('ReadRequest', (e,id,req)=>{
            var image = new Image();
            image.src = req.src;
            var clips = (Reflect.has(req,"clips") && Array.isArray(req["clips"]) && req["clips"].length > 0) ? req["clips"] : [{}];
            image.onload = function(){
                var queue = [];
                clips = clips.map(x=>{
                    var clipOptions = {
                        x:Reflect.has(x,"x") ? x.x :0,
                        y:Reflect.has(x,"y") ? x.y :0,
                        width:Reflect.has(x,"width") ? x.width :image.width,
                        height:Reflect.has(x,"height") ? x.height :image.height
                    }
                    var cnv = document.createElement("canvas");
                    cnv.height = clipOptions.height;
                    cnv.width = clipOptions.width;
                    var ctx = cnv.getContext("2d");
                    ctx.drawImage(image,0 - clipOptions.x, 0 - clipOptions.y);
                    return cnv;
                });
                (function PullFromStack(completeClips=[]){
                    if(clips.length>0){
                        msg("Recongising new clip, Initialising..."," From :"+id);
                        var tw = new Tesseract.TesseractWorker()
                            .recognize(clips.shift())
                            .progress(progress => {
                               if(progress.status === "recognizing text")msg( 
                                    "Scanning at: " + Math.round(progress.progress * 100) + "%"," From :"+id);
                            })
                            .then(result => {
                                completeClips.push(result.text);
                                PullFromStack(completeClips);
                            });
                    }else ipcRenderer.send(id,completeClips);
                })();
            }
        });
    </script>
</head>
<body>
    
</body>
</html>